---
# Purpose: Creates the Kerberos principals needed
#
# Notes:
#   - Executed on KDC server as it requires kadmin.local
#   - The principal database must already exit

- name: Determine existing principals
  shell: kadmin.local -q 'listprincs'
  register: principal_list
  changed_when: false

- debug: var=principal_list.stdout_lines

- name: Add administrator and kerberos principals
  command: kadmin.local -q 'addprinc -pw krbsekret {{ KRB_ADMIN }}/admin@{{ KRB_REALM }}'
  when: principal_list.stdout.find('{{ KRB_ADMIN }}/admin@{{ KRB_REALM }}') == -1
- command: kadmin.local -q 'addprinc -pw krbsekret {{ KRB_ADMIN }}@{{ KRB_REALM }}'
  when: principal_list.stdout.find('{{ KRB_ADMIN }}@{{ KRB_REALM }}') == -1
- command: kadmin.local -q 'addprinc -pw krbsekret krbtgt/{{ KRB_REALM }}@{{ KRB_REALM }}'
  when: principal_list.stdout.find('krbtgt/{{ KRB_REALM }}@{{ KRB_REALM }}') == -1

- name: Add user principals
  command: kadmin.local -q 'addprinc -pw {{ item.user }} {{ item.user }}@{{ KRB_REALM }}'
  with_items:
    - "{{ END_USERS }}"
  when: principal_list.stdout.find('{{ item.user }}@{{ KRB_REALM }}') == -1

- name: Add service principals
  command: kadmin.local -q 'add_principal -randkey {{ item[1] }}/{{ item[0] }}.{{ CLUSTER_DOMAIN }}@{{ KRB_REALM }}'
  with_nested:
    - "{{ groups.all }}"
    - "{{ KRB_PRINCIPALS }}"
  when: principal_list.stdout.find('{{ item[1] }}/{{ item[0] }}.{{ CLUSTER_DOMAIN }}@{{ KRB_REALM }}') == -1

- name: Export keytabs into root account
  file: path=/root/keytabs owner=root group=root mode=700 state=directory
  # usually a services has its own principal and the special HTTP principal for its web UIs...
- command: kadmin.local -q 'xst -k /root/keytabs/{{ item[1] }}-{{ item[0] }}.keytab -norandkey -q {{ item[1] }}/{{ item[0] }}.{{ CLUSTER_DOMAIN }}@{{ KRB_REALM }} HTTP/{{ item[0] }}.{{ CLUSTER_DOMAIN }}@{{ KRB_REALM }}'
  args:
    creates: /root/keytabs/{{ item[1] }}-{{ item[0] }}.keytab
  with_nested:
    - "{{ groups.all }}"
    - "{{ KRB_SERVICES_WITH_HTTP }}"
  # but for the history server there is only a single principal in the keytab
- command: kadmin.local -q 'xst -k /root/keytabs/mapred-{{ item }}.keytab -norandkey -q mapred/{{ item }}@{{ KRB_REALM }}'
  args:
    creates: /root/keytabs/mapred-{{ item }}.keytab
  with_items:
    - groups.historyserver
  # finally also export the normal user principals
- command: kadmin.local -q 'xst -k /root/keytabs/{{ item.user }}.keytab -norandkey -q {{ item.user }}@{{ KRB_REALM }}'
  args:
    creates: /root/keytabs/{{ item.user }}.keytab
  with_items:
    - "{{ END_USERS }}"

- name: Download keytabs to orchestration server
  fetch: src=/root/keytabs/{{ item[1] }}-{{ item[0] }}.keytab dest=files/keytabs/ flat=yes failonmissing=yes
  with_nested:
    - "{{ groups.all }}"
    - "{{ KRB_SERVICES_WITH_HTTP }}"
- fetch: src=/root/keytabs/{{ item.user }}.keytab dest=files/keytabs/ flat=yes failonmissing=yes
  with_items:
    - "{{ END_USERS }}"
